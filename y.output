Terminals unused in grammar

   ERRTOK


State 0 conflicts: 1 reduce/reduce
State 64 conflicts: 2 shift/reduce
State 87 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions

    3 ident: IDENT

    4 term: NUMBER
    5     | var
    6     | L_PAREN expression R_PAREN
    7     | L_PAREN mult_expression R_PAREN
    8     | SUB NUMBER
    9     | SUB var
   10     | SUB L_PAREN expression R_PAREN
   11     | IDENT L_PAREN expression R_PAREN
   12     | IDENT L_PAREN mult_expression R_PAREN

   13 var: ident
   14    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   15    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   16 vars: var COMMA vars
   17     | var

   18 statement: var ASSIGN expression
   19          | IF bool_exp THEN statements ENDIF
   20          | IF bool_exp THEN statements ELSE statements ENDIF
   21          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   23          | FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP
   24          | READ vars
   25          | WRITE vars
   26          | CONTINUE
   27          | RETURN expression
   28          | var error expression

   29 statements: %empty
   30           | statement SEMICOLON statements

   31 expression: mult_expression
   32           | mult_expression SUB mult_expression
   33           | mult_expression ADD mult_expression

   34 mult_expression: term
   35                | term MOD term
   36                | term MULT term
   37                | term DIV term
   38                | term ADD term
   39                | term SUB term

   40 relation_exp: expression comparison expression
   41             | TRUE
   42             | FALSE
   43             | L_PAREN bool_exp R_PAREN
   44             | NOT expression comparison expression
   45             | NOT TRUE
   46             | NOT FALSE
   47             | NOT L_PAREN bool_exp R_PAREN

   48 relation_and_exp: relation_exp
   49                 | relation_exp AND relation_and_exp

   50 bool_exp: relation_and_exp
   51         | relation_and_exp OR relation_and_exp

   52 comparison: LT
   53           | GT
   54           | EQ
   55           | NEQ
   56           | LTE
   57           | GTE

   58 identifiers: IDENT
   59            | identifiers COMMA IDENT

   60 declaration: identifiers COLON INTEGER
   61            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   62            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   63            | identifiers error INTEGER

   64 declarations: %empty
   65             | declaration SEMICOLON declarations

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
   67         | FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

   68 functions: %empty
   69          | function functions


Terminals, with rules where they appear

$end (0) 0
error (256) 28 63 67
L_PAREN (258) 6 7 10 11 12 43 47
R_PAREN (259) 6 7 10 11 12 43 47
EQ (260) 54
NEQ (261) 55
LT (262) 52
GT (263) 53
END_PARAMS (264) 66 67
SEMICOLON (265) 23 30 65 66
COLON (266) 60 61 62
COMMA (267) 16 59
L_SQUARE_BRACKET (268) 14 15 61 62
MOD (269) 35
R_SQUARE_BRACKET (270) 14 15 61 62
FUNCTION (271) 66 67
BEGIN_PARAMS (272) 66 67
WHILE (273) 21 22
BEGIN_LOCALS (274) 66 67
END_LOCALS (275) 66 67
BEGIN_BODY (276) 66 67
END_BODY (277) 66 67
INTEGER (278) 60 61 62 63
ARRAY (279) 61 62
OF (280) 61 62
IF (281) 19 20
THEN (282) 19 20
ENDIF (283) 19 20
ELSE (284) 20
DIV (285) 37
DO (286) 22
BEGINLOOP (287) 21 22 23
ENDLOOP (288) 21 22 23
CONTINUE (289) 26
READ (290) 24
WRITE (291) 25
AND (292) 49
OR (293) 51
FOR (294) 23
NOT (295) 44 45 46 47
TRUE (296) 41 45
RETURN (297) 27
ADD (298) 33 38
SUB (299) 8 9 10 32 39
MULT (300) 36
LTE (301) 56
GTE (302) 57
ASSIGN (303) 18 23
FALSE (304) 42 46
ERRTOK (305)
IDENT (306) 3 11 12 14 15 58 59 66 67
NUMBER (307) 4 8 23 61 62


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1 2, on right: 0
ident (55)
    on left: 3, on right: 13
term (56)
    on left: 4 5 6 7 8 9 10 11 12, on right: 34 35 36 37 38 39
var (57)
    on left: 13 14 15, on right: 5 9 16 17 18 23 28
vars (58)
    on left: 16 17, on right: 16 24 25
statement (59)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 30
statements (60)
    on left: 29 30, on right: 19 20 21 22 23 30 66 67
expression (61)
    on left: 31 32 33, on right: 6 10 11 14 15 18 23 27 28 40 44
mult_expression (62)
    on left: 34 35 36 37 38 39, on right: 7 12 31 32 33
relation_exp (63)
    on left: 40 41 42 43 44 45 46 47, on right: 48 49
relation_and_exp (64)
    on left: 48 49, on right: 49 50 51
bool_exp (65)
    on left: 50 51, on right: 19 20 21 22 23 43 47
comparison (66)
    on left: 52 53 54 55 56 57, on right: 40 44
identifiers (67)
    on left: 58 59, on right: 59 60 61 62 63
declaration (68)
    on left: 60 61 62 63, on right: 65
declarations (69)
    on left: 64 65, on right: 65 66 67
function (70)
    on left: 66 67, on right: 69
functions (71)
    on left: 68 69, on right: 2 69


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 68 (functions)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    function    go to state 3
    functions   go to state 4


State 1

   66 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
   67         | FUNCTION . IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

   69 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 68 (functions)

    function   go to state 3
    functions  go to state 7


State 4

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 5

   66 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
   67         | FUNCTION IDENT . error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

   69 functions: function functions .

    $default  reduce using rule 69 (functions)


State 8

   67 function: FUNCTION IDENT error . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 9

   66 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 10

   67 function: FUNCTION IDENT error BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 64 (declarations)

    identifiers   go to state 13
    declaration   go to state 14
    declarations  go to state 15


State 11

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 64 (declarations)

    identifiers   go to state 13
    declaration   go to state 14
    declarations  go to state 16


State 12

   58 identifiers: IDENT .

    $default  reduce using rule 58 (identifiers)


State 13

   59 identifiers: identifiers . COMMA IDENT
   60 declaration: identifiers . COLON INTEGER
   61            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   62            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   63            | identifiers . error INTEGER

    error  shift, and go to state 17
    COLON  shift, and go to state 18
    COMMA  shift, and go to state 19


State 14

   65 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 20


State 15

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 21


State 16

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 22


State 17

   63 declaration: identifiers error . INTEGER

    INTEGER  shift, and go to state 23


State 18

   60 declaration: identifiers COLON . INTEGER
   61            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   62            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 19

   59 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 26


State 20

   65 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 64 (declarations)

    identifiers   go to state 13
    declaration   go to state 14
    declarations  go to state 27


State 21

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 28


State 22

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 29


State 23

   63 declaration: identifiers error INTEGER .

    $default  reduce using rule 63 (declaration)


State 24

   60 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 60 (declaration)


State 25

   61 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   62            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 30


State 26

   59 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 59 (identifiers)


State 27

   65 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 65 (declarations)


State 28

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 64 (declarations)

    identifiers   go to state 13
    declaration   go to state 14
    declarations  go to state 31


State 29

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 64 (declarations)

    identifiers   go to state 13
    declaration   go to state 14
    declarations  go to state 32


State 30

   61 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   62            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33


State 31

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 34


State 32

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 35


State 33

   61 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   62            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 34

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 37


State 35

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 38


State 36

   61 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   62            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 39
    OF                shift, and go to state 40


State 37

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 53


State 38

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 54


State 39

   62 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 55


State 40

   61 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 56


State 41

   21 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 66
    mult_expression   go to state 67
    relation_exp      go to state 68
    relation_and_exp  go to state 69
    bool_exp          go to state 70


State 42

   19 statement: IF . bool_exp THEN statements ENDIF
   20          | IF . bool_exp THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 66
    mult_expression   go to state 67
    relation_exp      go to state 68
    relation_and_exp  go to state 69
    bool_exp          go to state 71


State 43

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 72


State 44

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 45

   24 statement: READ . vars

    IDENT  shift, and go to state 49

    ident  go to state 50
    var    go to state 73
    vars   go to state 74


State 46

   25 statement: WRITE . vars

    IDENT  shift, and go to state 49

    ident  go to state 50
    var    go to state 73
    vars   go to state 75


State 47

   23 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 49

    ident  go to state 50
    var    go to state 76


State 48

   27 statement: RETURN . expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 78
    mult_expression  go to state 67


State 49

    3 ident: IDENT .
   14 var: IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   15    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 79

    $default  reduce using rule 3 (ident)


State 50

   13 var: ident .

    $default  reduce using rule 13 (var)


State 51

   18 statement: var . ASSIGN expression
   28          | var . error expression

    error   shift, and go to state 80
    ASSIGN  shift, and go to state 81


State 52

   30 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 82


State 53

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 83


State 54

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 84


State 55

   62 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 85


State 56

   61 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 61 (declaration)


State 57

    6 term: L_PAREN . expression R_PAREN
    7     | L_PAREN . mult_expression R_PAREN
   43 relation_exp: L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 86
    mult_expression   go to state 87
    relation_exp      go to state 68
    relation_and_exp  go to state 69
    bool_exp          go to state 88


State 58

   44 relation_exp: NOT . expression comparison expression
   45             | NOT . TRUE
   46             | NOT . FALSE
   47             | NOT . L_PAREN bool_exp R_PAREN

    L_PAREN  shift, and go to state 89
    TRUE     shift, and go to state 90
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 91
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 92
    mult_expression  go to state 67


State 59

   41 relation_exp: TRUE .

    $default  reduce using rule 41 (relation_exp)


State 60

    8 term: SUB . NUMBER
    9     | SUB . var
   10     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 93
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 94

    ident  go to state 50
    var    go to state 95


State 61

   42 relation_exp: FALSE .

    $default  reduce using rule 42 (relation_exp)


State 62

    3 ident: IDENT .
   11 term: IDENT . L_PAREN expression R_PAREN
   12     | IDENT . L_PAREN mult_expression R_PAREN
   14 var: IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   15    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 96
    L_SQUARE_BRACKET  shift, and go to state 79

    $default  reduce using rule 3 (ident)


State 63

    4 term: NUMBER .

    $default  reduce using rule 4 (term)


State 64

   34 mult_expression: term .
   35                | term . MOD term
   36                | term . MULT term
   37                | term . DIV term
   38                | term . ADD term
   39                | term . SUB term

    MOD   shift, and go to state 97
    DIV   shift, and go to state 98
    ADD   shift, and go to state 99
    SUB   shift, and go to state 100
    MULT  shift, and go to state 101

    ADD       [reduce using rule 34 (mult_expression)]
    SUB       [reduce using rule 34 (mult_expression)]
    $default  reduce using rule 34 (mult_expression)


State 65

    5 term: var .

    $default  reduce using rule 5 (term)


State 66

   40 relation_exp: expression . comparison expression

    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    LT   shift, and go to state 104
    GT   shift, and go to state 105
    LTE  shift, and go to state 106
    GTE  shift, and go to state 107

    comparison  go to state 108


State 67

   31 expression: mult_expression .
   32           | mult_expression . SUB mult_expression
   33           | mult_expression . ADD mult_expression

    ADD  shift, and go to state 109
    SUB  shift, and go to state 110

    $default  reduce using rule 31 (expression)


State 68

   48 relation_and_exp: relation_exp .
   49                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 111

    $default  reduce using rule 48 (relation_and_exp)


State 69

   50 bool_exp: relation_and_exp .
   51         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 112

    $default  reduce using rule 50 (bool_exp)


State 70

   21 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 113


State 71

   19 statement: IF bool_exp . THEN statements ENDIF
   20          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 114


State 72

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 115


State 73

   16 vars: var . COMMA vars
   17     | var .

    COMMA  shift, and go to state 116

    $default  reduce using rule 17 (vars)


State 74

   24 statement: READ vars .

    $default  reduce using rule 24 (statement)


State 75

   25 statement: WRITE vars .

    $default  reduce using rule 25 (statement)


State 76

   23 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 117


State 77

    6 term: L_PAREN . expression R_PAREN
    7     | L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 118
    mult_expression  go to state 87


State 78

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 79

   14 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   15    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 119
    mult_expression  go to state 67


State 80

   28 statement: var error . expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 120
    mult_expression  go to state 67


State 81

   18 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 121
    mult_expression  go to state 67


State 82

   30 statements: statement SEMICOLON . statements

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 122


State 83

   67 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 67 (function)


State 84

   66 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 66 (function)


State 85

   62 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 123


State 86

    6 term: L_PAREN expression . R_PAREN
   40 relation_exp: expression . comparison expression

    R_PAREN  shift, and go to state 124
    EQ       shift, and go to state 102
    NEQ      shift, and go to state 103
    LT       shift, and go to state 104
    GT       shift, and go to state 105
    LTE      shift, and go to state 106
    GTE      shift, and go to state 107

    comparison  go to state 108


State 87

    7 term: L_PAREN mult_expression . R_PAREN
   31 expression: mult_expression .
   32           | mult_expression . SUB mult_expression
   33           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 125
    ADD      shift, and go to state 109
    SUB      shift, and go to state 110

    R_PAREN   [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)


State 88

   43 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 126


State 89

    6 term: L_PAREN . expression R_PAREN
    7     | L_PAREN . mult_expression R_PAREN
   47 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 86
    mult_expression   go to state 87
    relation_exp      go to state 68
    relation_and_exp  go to state 69
    bool_exp          go to state 127


State 90

   45 relation_exp: NOT TRUE .

    $default  reduce using rule 45 (relation_exp)


State 91

   46 relation_exp: NOT FALSE .

    $default  reduce using rule 46 (relation_exp)


State 92

   44 relation_exp: NOT expression . comparison expression

    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    LT   shift, and go to state 104
    GT   shift, and go to state 105
    LTE  shift, and go to state 106
    GTE  shift, and go to state 107

    comparison  go to state 128


State 93

   10 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 129
    mult_expression  go to state 67


State 94

    8 term: SUB NUMBER .

    $default  reduce using rule 8 (term)


State 95

    9 term: SUB var .

    $default  reduce using rule 9 (term)


State 96

   11 term: IDENT L_PAREN . expression R_PAREN
   12     | IDENT L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 130
    mult_expression  go to state 131


State 97

   35 mult_expression: term MOD . term

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident  go to state 50
    term   go to state 132
    var    go to state 65


State 98

   37 mult_expression: term DIV . term

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident  go to state 50
    term   go to state 133
    var    go to state 65


State 99

   38 mult_expression: term ADD . term

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident  go to state 50
    term   go to state 134
    var    go to state 65


State 100

   39 mult_expression: term SUB . term

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident  go to state 50
    term   go to state 135
    var    go to state 65


State 101

   36 mult_expression: term MULT . term

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident  go to state 50
    term   go to state 136
    var    go to state 65


State 102

   54 comparison: EQ .

    $default  reduce using rule 54 (comparison)


State 103

   55 comparison: NEQ .

    $default  reduce using rule 55 (comparison)


State 104

   52 comparison: LT .

    $default  reduce using rule 52 (comparison)


State 105

   53 comparison: GT .

    $default  reduce using rule 53 (comparison)


State 106

   56 comparison: LTE .

    $default  reduce using rule 56 (comparison)


State 107

   57 comparison: GTE .

    $default  reduce using rule 57 (comparison)


State 108

   40 relation_exp: expression comparison . expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 137
    mult_expression  go to state 67


State 109

   33 expression: mult_expression ADD . mult_expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    mult_expression  go to state 138


State 110

   32 expression: mult_expression SUB . mult_expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    mult_expression  go to state 139


State 111

   49 relation_and_exp: relation_exp AND . relation_and_exp

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 66
    mult_expression   go to state 67
    relation_exp      go to state 68
    relation_and_exp  go to state 140


State 112

   51 bool_exp: relation_and_exp OR . relation_and_exp

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 66
    mult_expression   go to state 67
    relation_exp      go to state 68
    relation_and_exp  go to state 141


State 113

   21 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 142


State 114

   19 statement: IF bool_exp THEN . statements ENDIF
   20          | IF bool_exp THEN . statements ELSE statements ENDIF

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 143


State 115

   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 144


State 116

   16 vars: var COMMA . vars

    IDENT  shift, and go to state 49

    ident  go to state 50
    var    go to state 73
    vars   go to state 145


State 117

   23 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    NUMBER  shift, and go to state 146


State 118

    6 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 124


State 119

   14 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   15    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 147


State 120

   28 statement: var error expression .

    $default  reduce using rule 28 (statement)


State 121

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 122

   30 statements: statement SEMICOLON statements .

    $default  reduce using rule 30 (statements)


State 123

   62 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 148


State 124

    6 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 6 (term)


State 125

    7 term: L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 7 (term)


State 126

   43 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 43 (relation_exp)


State 127

   47 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 149


State 128

   44 relation_exp: NOT expression comparison . expression

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 150
    mult_expression  go to state 67


State 129

   10 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 151


State 130

   11 term: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 152


State 131

   12 term: IDENT L_PAREN mult_expression . R_PAREN
   31 expression: mult_expression .
   32           | mult_expression . SUB mult_expression
   33           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 153
    ADD      shift, and go to state 109
    SUB      shift, and go to state 110

    R_PAREN  [reduce using rule 31 (expression)]


State 132

   35 mult_expression: term MOD term .

    $default  reduce using rule 35 (mult_expression)


State 133

   37 mult_expression: term DIV term .

    $default  reduce using rule 37 (mult_expression)


State 134

   38 mult_expression: term ADD term .

    $default  reduce using rule 38 (mult_expression)


State 135

   39 mult_expression: term SUB term .

    $default  reduce using rule 39 (mult_expression)


State 136

   36 mult_expression: term MULT term .

    $default  reduce using rule 36 (mult_expression)


State 137

   40 relation_exp: expression comparison expression .

    $default  reduce using rule 40 (relation_exp)


State 138

   33 expression: mult_expression ADD mult_expression .

    $default  reduce using rule 33 (expression)


State 139

   32 expression: mult_expression SUB mult_expression .

    $default  reduce using rule 32 (expression)


State 140

   49 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 49 (relation_and_exp)


State 141

   51 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 51 (bool_exp)


State 142

   21 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 154


State 143

   19 statement: IF bool_exp THEN statements . ENDIF
   20          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 155
    ELSE   shift, and go to state 156


State 144

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 157


State 145

   16 vars: var COMMA vars .

    $default  reduce using rule 16 (vars)


State 146

   23 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 158


State 147

   14 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   15    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 159

    $default  reduce using rule 14 (var)


State 148

   62 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 62 (declaration)


State 149

   47 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 47 (relation_exp)


State 150

   44 relation_exp: NOT expression comparison expression .

    $default  reduce using rule 44 (relation_exp)


State 151

   10 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 10 (term)


State 152

   11 term: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 11 (term)


State 153

   12 term: IDENT L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 12 (term)


State 154

   21 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 155

   19 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


State 156

   20 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 160


State 157

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 66
    mult_expression   go to state 67
    relation_exp      go to state 68
    relation_and_exp  go to state 69
    bool_exp          go to state 161


State 158

   23 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 57
    NOT      shift, and go to state 58
    TRUE     shift, and go to state 59
    SUB      shift, and go to state 60
    FALSE    shift, and go to state 61
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident             go to state 50
    term              go to state 64
    var               go to state 65
    expression        go to state 66
    mult_expression   go to state 67
    relation_exp      go to state 68
    relation_and_exp  go to state 69
    bool_exp          go to state 162


State 159

   15 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 163
    mult_expression  go to state 67


State 160

   20 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 164


State 161

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 22 (statement)


State 162

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 165


State 163

   15 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 166


State 164

   20 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)


State 165

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 49

    ident  go to state 50
    var    go to state 167


State 166

   15 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 15 (var)


State 167

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 168


State 168

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 77
    SUB      shift, and go to state 60
    IDENT    shift, and go to state 62
    NUMBER   shift, and go to state 63

    ident            go to state 50
    term             go to state 64
    var              go to state 65
    expression       go to state 169
    mult_expression  go to state 67


State 169

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statements SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 170


State 170

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statements SEMICOLON ENDLOOP

    WHILE     shift, and go to state 41
    IF        shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    FOR       shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    $default  reduce using rule 29 (statements)

    ident       go to state 50
    var         go to state 51
    statement   go to state 52
    statements  go to state 171


State 171

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 172


State 172

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON . ENDLOOP

    ENDLOOP  shift, and go to state 173


State 173

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP .

    $default  reduce using rule 23 (statement)
