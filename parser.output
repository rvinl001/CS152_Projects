Terminals unused in grammar

   ERRTOK


State 56 conflicts: 2 shift/reduce
State 78 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: functions

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    3 functions: %empty
    4          | function functions

    5 ident: IDENT

    6 term: NUMBER
    7     | var
    8     | L_PAREN expression R_PAREN
    9     | L_PAREN mult_expression R_PAREN
   10     | SUB NUMBER
   11     | SUB var
   12     | SUB L_PAREN expression R_PAREN
   13     | IDENT L_PAREN expression R_PAREN
   14     | IDENT L_PAREN mult_expression R_PAREN

   15 var: ident
   16    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   17    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   18 vars: var COMMA vars
   19     | var

   20 statement: var ASSIGN expression
   21          | IF bool_exp THEN statements ENDIF
   22          | IF bool_exp THEN statements ELSE statements ENDIF
   23          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   24          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   25          | FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP
   26          | READ vars
   27          | WRITE vars
   28          | CONTINUE
   29          | RETURN expression
   30          | var error expression

   31 statements: %empty
   32           | statement SEMICOLON statements

   33 expression: mult_expression
   34           | mult_expression SUB mult_expression
   35           | mult_expression ADD mult_expression

   36 mult_expression: term
   37                | term MOD term
   38                | term MULT term
   39                | term DIV term
   40                | term ADD term
   41                | term SUB term

   42 relation_exp: expression comparison expression
   43             | TRUE
   44             | FALSE
   45             | L_PAREN bool_exp R_PAREN
   46             | NOT expression comparison expression
   47             | NOT TRUE
   48             | NOT FALSE
   49             | NOT L_PAREN bool_exp R_PAREN

   50 relation_and_exp: relation_exp
   51                 | relation_exp AND relation_and_exp

   52 bool_exp: relation_and_exp
   53         | relation_and_exp OR relation_and_exp

   54 comparison: LT
   55           | GT
   56           | EQ
   57           | NEQ
   58           | LTE
   59           | GTE

   60 identifiers: IDENT
   61            | identifiers COMMA IDENT

   62 declaration: identifiers COLON INTEGER
   63            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   64            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   65            | identifiers error INTEGER

   66 declarations: %empty
   67             | declaration SEMICOLON declarations


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 30 65
L_PAREN (258) 8 9 12 13 14 45 49
R_PAREN (259) 8 9 12 13 14 45 49
EQ (260) 56
NEQ (261) 57
LT (262) 54
GT (263) 55
END_PARAMS (264) 2
SEMICOLON (265) 2 25 32 67
COLON (266) 62 63 64
COMMA (267) 18 61
L_SQUARE_BRACKET (268) 16 17 63 64
MOD (269) 37
R_SQUARE_BRACKET (270) 16 17 63 64
FUNCTION (271) 2
BEGIN_PARAMS (272) 2
WHILE (273) 23 24
BEGIN_LOCALS (274) 2
END_LOCALS (275) 2
BEGIN_BODY (276) 2
END_BODY (277) 2
INTEGER (278) 62 63 64 65
ARRAY (279) 63 64
OF (280) 63 64
IF (281) 21 22
THEN (282) 21 22
ENDIF (283) 21 22
ELSE (284) 22
DIV (285) 39
DO (286) 24
BEGINLOOP (287) 23 24 25
ENDLOOP (288) 23 24 25
CONTINUE (289) 28
READ (290) 26
WRITE (291) 27
AND (292) 51
OR (293) 53
FOR (294) 25
NOT (295) 46 47 48 49
TRUE (296) 43 47
RETURN (297) 29
ADD (298) 35 40
SUB (299) 10 11 12 34 41
MULT (300) 38
LTE (301) 58
GTE (302) 59
ASSIGN (303) 20 25
FALSE (304) 44 48
ERRTOK (305)
IDENT (306) 5 13 14 16 17 60 61
NUMBER (307) 6 10 25 63 64


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
function (55)
    on left: 2, on right: 4
functions (56)
    on left: 3 4, on right: 1 4
ident (57)
    on left: 5, on right: 2 15
term (58)
    on left: 6 7 8 9 10 11 12 13 14, on right: 36 37 38 39 40 41
var (59)
    on left: 15 16 17, on right: 7 11 18 19 20 25 30
vars (60)
    on left: 18 19, on right: 18 26 27
statement (61)
    on left: 20 21 22 23 24 25 26 27 28 29 30, on right: 32
statements (62)
    on left: 31 32, on right: 2 21 22 23 24 25 32
expression (63)
    on left: 33 34 35, on right: 8 12 13 16 17 20 25 29 30 42 46
mult_expression (64)
    on left: 36 37 38 39 40 41, on right: 9 14 33 34 35
relation_exp (65)
    on left: 42 43 44 45 46 47 48 49, on right: 50 51
relation_and_exp (66)
    on left: 50 51, on right: 51 52 53
bool_exp (67)
    on left: 52 53, on right: 21 22 23 24 25 45 49
comparison (68)
    on left: 54 55 56 57 58 59, on right: 42 46
identifiers (69)
    on left: 60 61, on right: 61 62 63 64 65
declaration (70)
    on left: 62 63 64 65, on right: 67
declarations (71)
    on left: 66 67, on right: 2 67


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    function    go to state 3
    functions   go to state 4


State 1

    2 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 7


State 3

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    function   go to state 3
    functions  go to state 8


State 4

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 5

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


State 6

    2 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start "end of file" .

    $default  accept


State 8

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 9

    2 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 66 (declarations)

    identifiers   go to state 12
    declaration   go to state 13
    declarations  go to state 14


State 11

   60 identifiers: IDENT .

    $default  reduce using rule 60 (identifiers)


State 12

   61 identifiers: identifiers . COMMA IDENT
   62 declaration: identifiers . COLON INTEGER
   63            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   64            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   65            | identifiers . error INTEGER

    error  shift, and go to state 15
    COLON  shift, and go to state 16
    COMMA  shift, and go to state 17


State 13

   67 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 14

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 19


State 15

   65 declaration: identifiers error . INTEGER

    INTEGER  shift, and go to state 20


State 16

   62 declaration: identifiers COLON . INTEGER
   63            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   64            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 17

   61 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 23


State 18

   67 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 66 (declarations)

    identifiers   go to state 12
    declaration   go to state 13
    declarations  go to state 24


State 19

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 20

   65 declaration: identifiers error INTEGER .

    $default  reduce using rule 65 (declaration)


State 21

   62 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 62 (declaration)


State 22

   63 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   64            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   61 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 61 (identifiers)


State 24

   67 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 67 (declarations)


State 25

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 66 (declarations)

    identifiers   go to state 12
    declaration   go to state 13
    declarations  go to state 27


State 26

   63 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   64            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   63 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   64            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   63 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   64            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 32
    OF                shift, and go to state 33


State 31

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 46


State 32

   64 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 47


State 33

   63 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 48


State 34

   23 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 58
    mult_expression   go to state 59
    relation_exp      go to state 60
    relation_and_exp  go to state 61
    bool_exp          go to state 62


State 35

   21 statement: IF . bool_exp THEN statements ENDIF
   22          | IF . bool_exp THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 58
    mult_expression   go to state 59
    relation_exp      go to state 60
    relation_and_exp  go to state 61
    bool_exp          go to state 63


State 36

   24 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 64


State 37

   28 statement: CONTINUE .

    $default  reduce using rule 28 (statement)


State 38

   26 statement: READ . vars

    IDENT  shift, and go to state 42

    ident  go to state 43
    var    go to state 65
    vars   go to state 66


State 39

   27 statement: WRITE . vars

    IDENT  shift, and go to state 42

    ident  go to state 43
    var    go to state 65
    vars   go to state 67


State 40

   25 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 42

    ident  go to state 43
    var    go to state 68


State 41

   29 statement: RETURN . expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 70
    mult_expression  go to state 59


State 42

    5 ident: IDENT .
   16 var: IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   17    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 5 (ident)


State 43

   15 var: ident .

    $default  reduce using rule 15 (var)


State 44

   20 statement: var . ASSIGN expression
   30          | var . error expression

    error   shift, and go to state 72
    ASSIGN  shift, and go to state 73


State 45

   32 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 74


State 46

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 75


State 47

   64 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 76


State 48

   63 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 63 (declaration)


State 49

    8 term: L_PAREN . expression R_PAREN
    9     | L_PAREN . mult_expression R_PAREN
   45 relation_exp: L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 77
    mult_expression   go to state 78
    relation_exp      go to state 60
    relation_and_exp  go to state 61
    bool_exp          go to state 79


State 50

   46 relation_exp: NOT . expression comparison expression
   47             | NOT . TRUE
   48             | NOT . FALSE
   49             | NOT . L_PAREN bool_exp R_PAREN

    L_PAREN  shift, and go to state 80
    TRUE     shift, and go to state 81
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 82
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 83
    mult_expression  go to state 59


State 51

   43 relation_exp: TRUE .

    $default  reduce using rule 43 (relation_exp)


State 52

   10 term: SUB . NUMBER
   11     | SUB . var
   12     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 85

    ident  go to state 43
    var    go to state 86


State 53

   44 relation_exp: FALSE .

    $default  reduce using rule 44 (relation_exp)


State 54

    5 ident: IDENT .
   13 term: IDENT . L_PAREN expression R_PAREN
   14     | IDENT . L_PAREN mult_expression R_PAREN
   16 var: IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   17    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 87
    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 5 (ident)


State 55

    6 term: NUMBER .

    $default  reduce using rule 6 (term)


State 56

   36 mult_expression: term .
   37                | term . MOD term
   38                | term . MULT term
   39                | term . DIV term
   40                | term . ADD term
   41                | term . SUB term

    MOD   shift, and go to state 88
    DIV   shift, and go to state 89
    ADD   shift, and go to state 90
    SUB   shift, and go to state 91
    MULT  shift, and go to state 92

    ADD       [reduce using rule 36 (mult_expression)]
    SUB       [reduce using rule 36 (mult_expression)]
    $default  reduce using rule 36 (mult_expression)


State 57

    7 term: var .

    $default  reduce using rule 7 (term)


State 58

   42 relation_exp: expression . comparison expression

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    comparison  go to state 99


State 59

   33 expression: mult_expression .
   34           | mult_expression . SUB mult_expression
   35           | mult_expression . ADD mult_expression

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101

    $default  reduce using rule 33 (expression)


State 60

   50 relation_and_exp: relation_exp .
   51                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 102

    $default  reduce using rule 50 (relation_and_exp)


State 61

   52 bool_exp: relation_and_exp .
   53         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 103

    $default  reduce using rule 52 (bool_exp)


State 62

   23 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 104


State 63

   21 statement: IF bool_exp . THEN statements ENDIF
   22          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 105


State 64

   24 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 106


State 65

   18 vars: var . COMMA vars
   19     | var .

    COMMA  shift, and go to state 107

    $default  reduce using rule 19 (vars)


State 66

   26 statement: READ vars .

    $default  reduce using rule 26 (statement)


State 67

   27 statement: WRITE vars .

    $default  reduce using rule 27 (statement)


State 68

   25 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 108


State 69

    8 term: L_PAREN . expression R_PAREN
    9     | L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 109
    mult_expression  go to state 78


State 70

   29 statement: RETURN expression .

    $default  reduce using rule 29 (statement)


State 71

   16 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   17    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 110
    mult_expression  go to state 59


State 72

   30 statement: var error . expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 111
    mult_expression  go to state 59


State 73

   20 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 112
    mult_expression  go to state 59


State 74

   32 statements: statement SEMICOLON . statements

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 113


State 75

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 2 (function)


State 76

   64 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 114


State 77

    8 term: L_PAREN expression . R_PAREN
   42 relation_exp: expression . comparison expression

    R_PAREN  shift, and go to state 115
    EQ       shift, and go to state 93
    NEQ      shift, and go to state 94
    LT       shift, and go to state 95
    GT       shift, and go to state 96
    LTE      shift, and go to state 97
    GTE      shift, and go to state 98

    comparison  go to state 99


State 78

    9 term: L_PAREN mult_expression . R_PAREN
   33 expression: mult_expression .
   34           | mult_expression . SUB mult_expression
   35           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 116
    ADD      shift, and go to state 100
    SUB      shift, and go to state 101

    R_PAREN   [reduce using rule 33 (expression)]
    $default  reduce using rule 33 (expression)


State 79

   45 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 117


State 80

    8 term: L_PAREN . expression R_PAREN
    9     | L_PAREN . mult_expression R_PAREN
   49 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 77
    mult_expression   go to state 78
    relation_exp      go to state 60
    relation_and_exp  go to state 61
    bool_exp          go to state 118


State 81

   47 relation_exp: NOT TRUE .

    $default  reduce using rule 47 (relation_exp)


State 82

   48 relation_exp: NOT FALSE .

    $default  reduce using rule 48 (relation_exp)


State 83

   46 relation_exp: NOT expression . comparison expression

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    comparison  go to state 119


State 84

   12 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 120
    mult_expression  go to state 59


State 85

   10 term: SUB NUMBER .

    $default  reduce using rule 10 (term)


State 86

   11 term: SUB var .

    $default  reduce using rule 11 (term)


State 87

   13 term: IDENT L_PAREN . expression R_PAREN
   14     | IDENT L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 121
    mult_expression  go to state 122


State 88

   37 mult_expression: term MOD . term

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident  go to state 43
    term   go to state 123
    var    go to state 57


State 89

   39 mult_expression: term DIV . term

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident  go to state 43
    term   go to state 124
    var    go to state 57


State 90

   40 mult_expression: term ADD . term

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident  go to state 43
    term   go to state 125
    var    go to state 57


State 91

   41 mult_expression: term SUB . term

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident  go to state 43
    term   go to state 126
    var    go to state 57


State 92

   38 mult_expression: term MULT . term

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident  go to state 43
    term   go to state 127
    var    go to state 57


State 93

   56 comparison: EQ .

    $default  reduce using rule 56 (comparison)


State 94

   57 comparison: NEQ .

    $default  reduce using rule 57 (comparison)


State 95

   54 comparison: LT .

    $default  reduce using rule 54 (comparison)


State 96

   55 comparison: GT .

    $default  reduce using rule 55 (comparison)


State 97

   58 comparison: LTE .

    $default  reduce using rule 58 (comparison)


State 98

   59 comparison: GTE .

    $default  reduce using rule 59 (comparison)


State 99

   42 relation_exp: expression comparison . expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 128
    mult_expression  go to state 59


State 100

   35 expression: mult_expression ADD . mult_expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    mult_expression  go to state 129


State 101

   34 expression: mult_expression SUB . mult_expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    mult_expression  go to state 130


State 102

   51 relation_and_exp: relation_exp AND . relation_and_exp

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 58
    mult_expression   go to state 59
    relation_exp      go to state 60
    relation_and_exp  go to state 131


State 103

   53 bool_exp: relation_and_exp OR . relation_and_exp

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 58
    mult_expression   go to state 59
    relation_exp      go to state 60
    relation_and_exp  go to state 132


State 104

   23 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 133


State 105

   21 statement: IF bool_exp THEN . statements ENDIF
   22          | IF bool_exp THEN . statements ELSE statements ENDIF

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 134


State 106

   24 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 135


State 107

   18 vars: var COMMA . vars

    IDENT  shift, and go to state 42

    ident  go to state 43
    var    go to state 65
    vars   go to state 136


State 108

   25 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    NUMBER  shift, and go to state 137


State 109

    8 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 115


State 110

   16 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   17    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 138


State 111

   30 statement: var error expression .

    $default  reduce using rule 30 (statement)


State 112

   20 statement: var ASSIGN expression .

    $default  reduce using rule 20 (statement)


State 113

   32 statements: statement SEMICOLON statements .

    $default  reduce using rule 32 (statements)


State 114

   64 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 139


State 115

    8 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 8 (term)


State 116

    9 term: L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 9 (term)


State 117

   45 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 45 (relation_exp)


State 118

   49 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 140


State 119

   46 relation_exp: NOT expression comparison . expression

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 141
    mult_expression  go to state 59


State 120

   12 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 142


State 121

   13 term: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 143


State 122

   14 term: IDENT L_PAREN mult_expression . R_PAREN
   33 expression: mult_expression .
   34           | mult_expression . SUB mult_expression
   35           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 144
    ADD      shift, and go to state 100
    SUB      shift, and go to state 101

    R_PAREN  [reduce using rule 33 (expression)]


State 123

   37 mult_expression: term MOD term .

    $default  reduce using rule 37 (mult_expression)


State 124

   39 mult_expression: term DIV term .

    $default  reduce using rule 39 (mult_expression)


State 125

   40 mult_expression: term ADD term .

    $default  reduce using rule 40 (mult_expression)


State 126

   41 mult_expression: term SUB term .

    $default  reduce using rule 41 (mult_expression)


State 127

   38 mult_expression: term MULT term .

    $default  reduce using rule 38 (mult_expression)


State 128

   42 relation_exp: expression comparison expression .

    $default  reduce using rule 42 (relation_exp)


State 129

   35 expression: mult_expression ADD mult_expression .

    $default  reduce using rule 35 (expression)


State 130

   34 expression: mult_expression SUB mult_expression .

    $default  reduce using rule 34 (expression)


State 131

   51 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 51 (relation_and_exp)


State 132

   53 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 53 (bool_exp)


State 133

   23 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 145


State 134

   21 statement: IF bool_exp THEN statements . ENDIF
   22          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 146
    ELSE   shift, and go to state 147


State 135

   24 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 148


State 136

   18 vars: var COMMA vars .

    $default  reduce using rule 18 (vars)


State 137

   25 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 149


State 138

   16 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   17    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 150

    $default  reduce using rule 16 (var)


State 139

   64 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 64 (declaration)


State 140

   49 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 49 (relation_exp)


State 141

   46 relation_exp: NOT expression comparison expression .

    $default  reduce using rule 46 (relation_exp)


State 142

   12 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 12 (term)


State 143

   13 term: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 13 (term)


State 144

   14 term: IDENT L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 14 (term)


State 145

   23 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 23 (statement)


State 146

   21 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 21 (statement)


State 147

   22 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 151


State 148

   24 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 58
    mult_expression   go to state 59
    relation_exp      go to state 60
    relation_and_exp  go to state 61
    bool_exp          go to state 152


State 149

   25 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 49
    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    SUB      shift, and go to state 52
    FALSE    shift, and go to state 53
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident             go to state 43
    term              go to state 56
    var               go to state 57
    expression        go to state 58
    mult_expression   go to state 59
    relation_exp      go to state 60
    relation_and_exp  go to state 61
    bool_exp          go to state 153


State 150

   17 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 154
    mult_expression  go to state 59


State 151

   22 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 155


State 152

   24 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 24 (statement)


State 153

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 156


State 154

   17 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 157


State 155

   22 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 22 (statement)


State 156

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 42

    ident  go to state 43
    var    go to state 158


State 157

   17 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 17 (var)


State 158

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 159


State 159

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 52
    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55

    ident            go to state 43
    term             go to state 56
    var              go to state 57
    expression       go to state 160
    mult_expression  go to state 59


State 160

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statements SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 161


State 161

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statements SEMICOLON ENDLOOP

    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    FOR       shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 31 (statements)

    ident       go to state 43
    var         go to state 44
    statement   go to state 45
    statements  go to state 162


State 162

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 163


State 163

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON . ENDLOOP

    ENDLOOP  shift, and go to state 164


State 164

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP .

    $default  reduce using rule 25 (statement)
