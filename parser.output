State 32 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: functions

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    3 functions: %empty
    4          | function functions

    5 ident: IDENT

    6 integer: INTEGER

    7 number: NUMBER

    8 declaration: identifiers COLON integer
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer

   11 declarations: %empty
   12             | declaration SEMICOLON declarations

   13 identifiers: ident
   14            | identifiers COMMA ident

   15 term: number
   16     | var
   17     | L_PAREN expression R_PAREN
   18     | L_PAREN mult_expression R_PAREN
   19     | SUB number
   20     | SUB var
   21     | SUB L_PAREN expression R_PAREN
   22     | ident L_PAREN expression R_PAREN
   23     | ident L_PAREN mult_expression R_PAREN

   24 var: ident
   25    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   26    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   27 vars: var COMMA vars
   28     | var

   29 statement: var ASSIGN expression
   30          | IF bool_exp THEN statements ENDIF
   31          | IF bool_exp THEN statements ELSE statements ENDIF
   32          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   33          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   34          | FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP
   35          | READ vars
   36          | WRITE vars
   37          | CONTINUE
   38          | RETURN expression
   39          | var ERRTOK expression

   40 statements: %empty
   41           | statement SEMICOLON statements

   42 expression: mult_expression
   43           | mult_expression SUB mult_expression
   44           | mult_expression ADD mult_expression

   45 mult_expression: term
   46                | term MOD term
   47                | term MULT term
   48                | term DIV term
   49                | term ADD term
   50                | %empty

   51 relation_exp: expression comparison expression
   52             | TRUE
   53             | FALSE
   54             | L_PAREN bool_exp R_PAREN
   55             | NOT expression comparison expression
   56             | NOT TRUE
   57             | NOT FALSE
   58             | NOT L_PAREN bool_exp R_PAREN

   59 relation_and_exp: relation_exp
   60                 | relation_exp AND relation_and_exp

   61 bool_exp: relation_and_exp
   62         | relation_and_exp OR relation_and_exp

   63 comparison: LT
   64           | GT
   65           | EQ
   66           | NEQ
   67           | LTE
   68           | GTE


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
L_PAREN (258) 17 18 21 22 23 54 58
R_PAREN (259) 17 18 21 22 23 54 58
EQ (260) 65
NEQ (261) 66
LT (262) 63
GT (263) 64
END_PARAMS (264) 2
SEMICOLON (265) 2 12 34 41
COLON (266) 8 9 10
COMMA (267) 14 27
L_SQUARE_BRACKET (268) 9 10 25 26
MOD (269) 46
R_SQUARE_BRACKET (270) 9 10 25 26
FUNCTION (271) 2
BEGIN_PARAMS (272) 2
WHILE (273) 32 33
BEGIN_LOCALS (274) 2
END_LOCALS (275) 2
BEGIN_BODY (276) 2
END_BODY (277) 2
INTEGER (278) 6
ARRAY (279) 9 10
OF (280) 9 10
IF (281) 30 31
THEN (282) 30 31
ENDIF (283) 30 31
ELSE (284) 31
DIV (285) 48
DO (286) 33
BEGINLOOP (287) 32 33 34
ENDLOOP (288) 32 33 34
CONTINUE (289) 37
READ (290) 35
WRITE (291) 36
AND (292) 60
OR (293) 62
FOR (294) 34
NOT (295) 55 56 57 58
TRUE (296) 52 56
RETURN (297) 38
ADD (298) 44 49
SUB (299) 19 20 21 43
MULT (300) 47
LTE (301) 67
GTE (302) 68
ASSIGN (303) 29 34
FALSE (304) 53 57
ERRTOK (305) 39
IDENT (306) 5
NUMBER (307) 7 34


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
function (55)
    on left: 2, on right: 4
functions (56)
    on left: 3 4, on right: 1 4
ident (57)
    on left: 5, on right: 2 13 14 22 23 24 25 26
integer (58)
    on left: 6, on right: 8 9 10
number (59)
    on left: 7, on right: 9 10 15 19
declaration (60)
    on left: 8 9 10, on right: 12
declarations (61)
    on left: 11 12, on right: 2 12
identifiers (62)
    on left: 13 14, on right: 8 9 10 14
term (63)
    on left: 15 16 17 18 19 20 21 22 23, on right: 45 46 47 48 49
var (64)
    on left: 24 25 26, on right: 16 20 27 28 29 34 39
vars (65)
    on left: 27 28, on right: 27 35 36
statement (66)
    on left: 29 30 31 32 33 34 35 36 37 38 39, on right: 41
statements (67)
    on left: 40 41, on right: 2 30 31 32 33 34 41
expression (68)
    on left: 42 43 44, on right: 17 21 22 25 26 29 34 38 39 51 55
mult_expression (69)
    on left: 45 46 47 48 49 50, on right: 18 23 42 43 44
relation_exp (70)
    on left: 51 52 53 54 55 56 57 58, on right: 59 60
relation_and_exp (71)
    on left: 59 60, on right: 60 61 62
bool_exp (72)
    on left: 61 62, on right: 30 31 32 33 34 54 58
comparison (73)
    on left: 63 64 65 66 67 68, on right: 51 55


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    function    go to state 3
    functions   go to state 4


State 1

    2 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 7


State 3

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    function   go to state 3
    functions  go to state 8


State 4

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 5

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


State 6

    2 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start "end of file" .

    $default  accept


State 8

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 9

    2 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 11 (declarations)

    ident         go to state 11
    declaration   go to state 12
    declarations  go to state 13
    identifiers   go to state 14


State 11

   13 identifiers: ident .

    $default  reduce using rule 13 (identifiers)


State 12

   12 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 13

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 14

    8 declaration: identifiers . COLON integer
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer
   14 identifiers: identifiers . COMMA ident

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18


State 15

   12 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 11 (declarations)

    ident         go to state 11
    declaration   go to state 12
    declarations  go to state 19
    identifiers   go to state 14


State 16

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    8 declaration: identifiers COLON . integer
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    integer  go to state 23


State 18

   14 identifiers: identifiers COMMA . ident

    IDENT  shift, and go to state 5

    ident  go to state 24


State 19

   12 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 12 (declarations)


State 20

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 11 (declarations)

    ident         go to state 11
    declaration   go to state 12
    declarations  go to state 25
    identifiers   go to state 14


State 21

    6 integer: INTEGER .

    $default  reduce using rule 6 (integer)


State 22

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer
   10            | identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    8 declaration: identifiers COLON integer .

    $default  reduce using rule 8 (declaration)


State 24

   14 identifiers: identifiers COMMA ident .

    $default  reduce using rule 14 (identifiers)


State 25

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF integer
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer

    NUMBER  shift, and go to state 28

    number  go to state 29


State 27

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

    7 number: NUMBER .

    $default  reduce using rule 7 (number)


State 29

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF integer
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 43


State 31

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF integer
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer

    L_SQUARE_BRACKET  shift, and go to state 44
    OF                shift, and go to state 45


State 32

   32 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 55
    mult_expression   go to state 56
    relation_exp      go to state 57
    relation_and_exp  go to state 58
    bool_exp          go to state 59


State 33

   30 statement: IF . bool_exp THEN statements ENDIF
   31          | IF . bool_exp THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 55
    mult_expression   go to state 56
    relation_exp      go to state 57
    relation_and_exp  go to state 58
    bool_exp          go to state 60


State 34

   33 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 61


State 35

   37 statement: CONTINUE .

    $default  reduce using rule 37 (statement)


State 36

   35 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 40
    var    go to state 62
    vars   go to state 63


State 37

   36 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 40
    var    go to state 62
    vars   go to state 64


State 38

   34 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 40
    var    go to state 65


State 39

   38 statement: RETURN . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 67
    mult_expression  go to state 56


State 40

   24 var: ident .
   25    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   26    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 24 (var)


State 41

   29 statement: var . ASSIGN expression
   39          | var . ERRTOK expression

    ASSIGN  shift, and go to state 69
    ERRTOK  shift, and go to state 70


State 42

   41 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 71


State 43

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 44

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF integer

    NUMBER  shift, and go to state 28

    number  go to state 73


State 45

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . integer

    INTEGER  shift, and go to state 21

    integer  go to state 74


State 46

   17 term: L_PAREN . expression R_PAREN
   18     | L_PAREN . mult_expression R_PAREN
   54 relation_exp: L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 75
    mult_expression   go to state 76
    relation_exp      go to state 57
    relation_and_exp  go to state 58
    bool_exp          go to state 77


State 47

   55 relation_exp: NOT . expression comparison expression
   56             | NOT . TRUE
   57             | NOT . FALSE
   58             | NOT . L_PAREN bool_exp R_PAREN

    L_PAREN  shift, and go to state 78
    TRUE     shift, and go to state 79
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 80
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 81
    mult_expression  go to state 56


State 48

   52 relation_exp: TRUE .

    $default  reduce using rule 52 (relation_exp)


State 49

   19 term: SUB . number
   20     | SUB . var
   21     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 82
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    ident   go to state 40
    number  go to state 83
    var     go to state 84


State 50

   53 relation_exp: FALSE .

    $default  reduce using rule 53 (relation_exp)


State 51

   22 term: ident . L_PAREN expression R_PAREN
   23     | ident . L_PAREN mult_expression R_PAREN
   24 var: ident .
   25    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   26    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 85
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 24 (var)


State 52

   15 term: number .

    $default  reduce using rule 15 (term)


State 53

   45 mult_expression: term .
   46                | term . MOD term
   47                | term . MULT term
   48                | term . DIV term
   49                | term . ADD term

    MOD   shift, and go to state 86
    DIV   shift, and go to state 87
    ADD   shift, and go to state 88
    MULT  shift, and go to state 89

    ADD       [reduce using rule 45 (mult_expression)]
    $default  reduce using rule 45 (mult_expression)


State 54

   16 term: var .

    $default  reduce using rule 16 (term)


State 55

   51 relation_exp: expression . comparison expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comparison  go to state 96


State 56

   42 expression: mult_expression .
   43           | mult_expression . SUB mult_expression
   44           | mult_expression . ADD mult_expression

    ADD  shift, and go to state 97
    SUB  shift, and go to state 98

    $default  reduce using rule 42 (expression)


State 57

   59 relation_and_exp: relation_exp .
   60                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 99

    $default  reduce using rule 59 (relation_and_exp)


State 58

   61 bool_exp: relation_and_exp .
   62         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 100

    $default  reduce using rule 61 (bool_exp)


State 59

   32 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 101


State 60

   30 statement: IF bool_exp . THEN statements ENDIF
   31          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 102


State 61

   33 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 103


State 62

   27 vars: var . COMMA vars
   28     | var .

    COMMA  shift, and go to state 104

    $default  reduce using rule 28 (vars)


State 63

   35 statement: READ vars .

    $default  reduce using rule 35 (statement)


State 64

   36 statement: WRITE vars .

    $default  reduce using rule 36 (statement)


State 65

   34 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 105


State 66

   17 term: L_PAREN . expression R_PAREN
   18     | L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 106
    mult_expression  go to state 76


State 67

   38 statement: RETURN expression .

    $default  reduce using rule 38 (statement)


State 68

   25 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   26    | ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 107
    mult_expression  go to state 56


State 69

   29 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 108
    mult_expression  go to state 56


State 70

   39 statement: var ERRTOK . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 109
    mult_expression  go to state 56


State 71

   41 statements: statement SEMICOLON . statements

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 110


State 72

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 2 (function)


State 73

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF integer

    R_SQUARE_BRACKET  shift, and go to state 111


State 74

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer .

    $default  reduce using rule 9 (declaration)


State 75

   17 term: L_PAREN expression . R_PAREN
   51 relation_exp: expression . comparison expression

    R_PAREN  shift, and go to state 112
    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91
    LT       shift, and go to state 92
    GT       shift, and go to state 93
    LTE      shift, and go to state 94
    GTE      shift, and go to state 95

    comparison  go to state 96


State 76

   18 term: L_PAREN mult_expression . R_PAREN
   42 expression: mult_expression .
   43           | mult_expression . SUB mult_expression
   44           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 113
    ADD      shift, and go to state 97
    SUB      shift, and go to state 98

    R_PAREN   [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


State 77

   54 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 114


State 78

   17 term: L_PAREN . expression R_PAREN
   18     | L_PAREN . mult_expression R_PAREN
   58 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 75
    mult_expression   go to state 76
    relation_exp      go to state 57
    relation_and_exp  go to state 58
    bool_exp          go to state 115


State 79

   56 relation_exp: NOT TRUE .

    $default  reduce using rule 56 (relation_exp)


State 80

   57 relation_exp: NOT FALSE .

    $default  reduce using rule 57 (relation_exp)


State 81

   55 relation_exp: NOT expression . comparison expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comparison  go to state 116


State 82

   21 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 117
    mult_expression  go to state 56


State 83

   19 term: SUB number .

    $default  reduce using rule 19 (term)


State 84

   20 term: SUB var .

    $default  reduce using rule 20 (term)


State 85

   22 term: ident L_PAREN . expression R_PAREN
   23     | ident L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 118
    mult_expression  go to state 119


State 86

   46 mult_expression: term MOD . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    ident   go to state 51
    number  go to state 52
    term    go to state 120
    var     go to state 54


State 87

   48 mult_expression: term DIV . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    ident   go to state 51
    number  go to state 52
    term    go to state 121
    var     go to state 54


State 88

   49 mult_expression: term ADD . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    ident   go to state 51
    number  go to state 52
    term    go to state 122
    var     go to state 54


State 89

   47 mult_expression: term MULT . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    ident   go to state 51
    number  go to state 52
    term    go to state 123
    var     go to state 54


State 90

   65 comparison: EQ .

    $default  reduce using rule 65 (comparison)


State 91

   66 comparison: NEQ .

    $default  reduce using rule 66 (comparison)


State 92

   63 comparison: LT .

    $default  reduce using rule 63 (comparison)


State 93

   64 comparison: GT .

    $default  reduce using rule 64 (comparison)


State 94

   67 comparison: LTE .

    $default  reduce using rule 67 (comparison)


State 95

   68 comparison: GTE .

    $default  reduce using rule 68 (comparison)


State 96

   51 relation_exp: expression comparison . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 124
    mult_expression  go to state 56


State 97

   44 expression: mult_expression ADD . mult_expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    mult_expression  go to state 125


State 98

   43 expression: mult_expression SUB . mult_expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    mult_expression  go to state 126


State 99

   60 relation_and_exp: relation_exp AND . relation_and_exp

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 55
    mult_expression   go to state 56
    relation_exp      go to state 57
    relation_and_exp  go to state 127


State 100

   62 bool_exp: relation_and_exp OR . relation_and_exp

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 55
    mult_expression   go to state 56
    relation_exp      go to state 57
    relation_and_exp  go to state 128


State 101

   32 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 129


State 102

   30 statement: IF bool_exp THEN . statements ENDIF
   31          | IF bool_exp THEN . statements ELSE statements ENDIF

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 130


State 103

   33 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 131


State 104

   27 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 40
    var    go to state 62
    vars   go to state 132


State 105

   34 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    NUMBER  shift, and go to state 133


State 106

   17 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 107

   25 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   26    | ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 134


State 108

   29 statement: var ASSIGN expression .

    $default  reduce using rule 29 (statement)


State 109

   39 statement: var ERRTOK expression .

    $default  reduce using rule 39 (statement)


State 110

   41 statements: statement SEMICOLON statements .

    $default  reduce using rule 41 (statements)


State 111

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF integer

    OF  shift, and go to state 135


State 112

   17 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 17 (term)


State 113

   18 term: L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 18 (term)


State 114

   54 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 54 (relation_exp)


State 115

   58 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 136


State 116

   55 relation_exp: NOT expression comparison . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 137
    mult_expression  go to state 56


State 117

   21 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 138


State 118

   22 term: ident L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 139


State 119

   23 term: ident L_PAREN mult_expression . R_PAREN
   42 expression: mult_expression .
   43           | mult_expression . SUB mult_expression
   44           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 140
    ADD      shift, and go to state 97
    SUB      shift, and go to state 98

    R_PAREN  [reduce using rule 42 (expression)]


State 120

   46 mult_expression: term MOD term .

    $default  reduce using rule 46 (mult_expression)


State 121

   48 mult_expression: term DIV term .

    $default  reduce using rule 48 (mult_expression)


State 122

   49 mult_expression: term ADD term .

    $default  reduce using rule 49 (mult_expression)


State 123

   47 mult_expression: term MULT term .

    $default  reduce using rule 47 (mult_expression)


State 124

   51 relation_exp: expression comparison expression .

    $default  reduce using rule 51 (relation_exp)


State 125

   44 expression: mult_expression ADD mult_expression .

    $default  reduce using rule 44 (expression)


State 126

   43 expression: mult_expression SUB mult_expression .

    $default  reduce using rule 43 (expression)


State 127

   60 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 60 (relation_and_exp)


State 128

   62 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 62 (bool_exp)


State 129

   32 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 141


State 130

   30 statement: IF bool_exp THEN statements . ENDIF
   31          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 142
    ELSE   shift, and go to state 143


State 131

   33 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 144


State 132

   27 vars: var COMMA vars .

    $default  reduce using rule 27 (vars)


State 133

   34 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 145


State 134

   25 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   26    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 146

    $default  reduce using rule 25 (var)


State 135

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . integer

    INTEGER  shift, and go to state 21

    integer  go to state 147


State 136

   58 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 58 (relation_exp)


State 137

   55 relation_exp: NOT expression comparison expression .

    $default  reduce using rule 55 (relation_exp)


State 138

   21 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 21 (term)


State 139

   22 term: ident L_PAREN expression R_PAREN .

    $default  reduce using rule 22 (term)


State 140

   23 term: ident L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 23 (term)


State 141

   32 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 32 (statement)


State 142

   30 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 30 (statement)


State 143

   31 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 148


State 144

   33 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 55
    mult_expression   go to state 56
    relation_exp      go to state 57
    relation_and_exp  go to state 58
    bool_exp          go to state 149


State 145

   34 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    SUB      shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident             go to state 51
    number            go to state 52
    term              go to state 53
    var               go to state 54
    expression        go to state 55
    mult_expression   go to state 56
    relation_exp      go to state 57
    relation_and_exp  go to state 58
    bool_exp          go to state 150


State 146

   26 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 151
    mult_expression  go to state 56


State 147

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF integer .

    $default  reduce using rule 10 (declaration)


State 148

   31 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 152


State 149

   33 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 33 (statement)


State 150

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 153


State 151

   26 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 154


State 152

   31 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 31 (statement)


State 153

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 40
    var    go to state 155


State 154

   26 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 26 (var)


State 155

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 156


State 156

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28

    SUB       [reduce using rule 50 (mult_expression)]
    $default  reduce using rule 50 (mult_expression)

    ident            go to state 51
    number           go to state 52
    term             go to state 53
    var              go to state 54
    expression       go to state 157
    mult_expression  go to state 56


State 157

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statements SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 158


State 158

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statements SEMICOLON ENDLOOP

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 40 (statements)

    ident       go to state 40
    var         go to state 41
    statement   go to state 42
    statements  go to state 159


State 159

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 160


State 160

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON . ENDLOOP

    ENDLOOP  shift, and go to state 161


State 161

   34 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP .

    $default  reduce using rule 34 (statement)
