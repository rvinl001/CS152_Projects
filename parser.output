Terminals unused in grammar

   ERRTOK


State 54 conflicts: 2 shift/reduce
State 77 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: functions

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    3 functions: %empty
    4          | function functions

    5 ident: IDENT

    6 declaration: identifiers COLON INTEGER
    7            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers error INTEGER

   10 declarations: %empty
   11             | declaration SEMICOLON declarations

   12 identifiers: IDENT
   13            | identifiers COMMA IDENT

   14 term: NUMBER
   15     | var
   16     | L_PAREN expression R_PAREN
   17     | L_PAREN mult_expression R_PAREN
   18     | SUB NUMBER
   19     | SUB var
   20     | SUB L_PAREN expression R_PAREN
   21     | IDENT L_PAREN expression R_PAREN
   22     | IDENT L_PAREN mult_expression R_PAREN

   23 var: ident
   24    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   25    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   26 vars: var COMMA vars
   27     | var

   28 statement: var ASSIGN expression
   29          | IF bool_exp THEN statements ENDIF
   30          | IF bool_exp THEN statements ELSE statements ENDIF
   31          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   32          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   33          | FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP
   34          | READ vars
   35          | WRITE vars
   36          | CONTINUE
   37          | RETURN expression
   38          | var error expression

   39 statements: %empty
   40           | statement SEMICOLON statements

   41 expression: mult_expression
   42           | mult_expression SUB mult_expression
   43           | mult_expression ADD mult_expression

   44 mult_expression: term
   45                | term MOD term
   46                | term MULT term
   47                | term DIV term
   48                | term ADD term
   49                | term SUB term

   50 relation_exp: expression comparison expression
   51             | TRUE
   52             | FALSE
   53             | L_PAREN bool_exp R_PAREN
   54             | NOT expression comparison expression
   55             | NOT TRUE
   56             | NOT FALSE
   57             | NOT L_PAREN bool_exp R_PAREN

   58 relation_and_exp: relation_exp
   59                 | relation_exp AND relation_and_exp

   60 bool_exp: relation_and_exp
   61         | relation_and_exp OR relation_and_exp

   62 comparison: LT
   63           | GT
   64           | EQ
   65           | NEQ
   66           | LTE
   67           | GTE


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 9 38
L_PAREN (258) 16 17 20 21 22 53 57
R_PAREN (259) 16 17 20 21 22 53 57
EQ (260) 64
NEQ (261) 65
LT (262) 62
GT (263) 63
END_PARAMS (264) 2
SEMICOLON (265) 2 11 33 40
COLON (266) 6 7 8
COMMA (267) 13 26
L_SQUARE_BRACKET (268) 7 8 24 25
MOD (269) 45
R_SQUARE_BRACKET (270) 7 8 24 25
FUNCTION (271) 2
BEGIN_PARAMS (272) 2
WHILE (273) 31 32
BEGIN_LOCALS (274) 2
END_LOCALS (275) 2
BEGIN_BODY (276) 2
END_BODY (277) 2
INTEGER (278) 6 7 8 9
ARRAY (279) 7 8
OF (280) 7 8
IF (281) 29 30
THEN (282) 29 30
ENDIF (283) 29 30
ELSE (284) 30
DIV (285) 47
DO (286) 32
BEGINLOOP (287) 31 32 33
ENDLOOP (288) 31 32 33
CONTINUE (289) 36
READ (290) 34
WRITE (291) 35
AND (292) 59
OR (293) 61
FOR (294) 33
NOT (295) 54 55 56 57
TRUE (296) 51 55
RETURN (297) 37
ADD (298) 43 48
SUB (299) 18 19 20 42 49
MULT (300) 46
LTE (301) 66
GTE (302) 67
ASSIGN (303) 28 33
FALSE (304) 52 56
ERRTOK (305)
IDENT (306) 5 12 13 21 22 24 25
NUMBER (307) 7 8 14 18 33


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
function (55)
    on left: 2, on right: 4
functions (56)
    on left: 3 4, on right: 1 4
ident (57)
    on left: 5, on right: 2 23
declaration (58)
    on left: 6 7 8 9, on right: 11
declarations (59)
    on left: 10 11, on right: 2 11
identifiers (60)
    on left: 12 13, on right: 6 7 8 9 13
term (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 44 45 46 47 48 49
var (62)
    on left: 23 24 25, on right: 15 19 26 27 28 33 38
vars (63)
    on left: 26 27, on right: 26 34 35
statement (64)
    on left: 28 29 30 31 32 33 34 35 36 37 38, on right: 40
statements (65)
    on left: 39 40, on right: 2 29 30 31 32 33 40
expression (66)
    on left: 41 42 43, on right: 16 20 21 24 25 28 33 37 38 50 54
mult_expression (67)
    on left: 44 45 46 47 48 49, on right: 17 22 41 42 43
relation_exp (68)
    on left: 50 51 52 53 54 55 56 57, on right: 58 59
relation_and_exp (69)
    on left: 58 59, on right: 59 60 61
bool_exp (70)
    on left: 60 61, on right: 29 30 31 32 33 53 57
comparison (71)
    on left: 62 63 64 65 66 67, on right: 50 54


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    function    go to state 3
    functions   go to state 4


State 1

    2 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 7


State 3

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    function   go to state 3
    functions  go to state 8


State 4

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 5

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


State 6

    2 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start "end of file" .

    $default  accept


State 8

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 9

    2 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 10 (declarations)

    declaration   go to state 12
    declarations  go to state 13
    identifiers   go to state 14


State 11

   12 identifiers: IDENT .

    $default  reduce using rule 12 (identifiers)


State 12

   11 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 13

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 14

    6 declaration: identifiers . COLON INTEGER
    7            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . error INTEGER
   13 identifiers: identifiers . COMMA IDENT

    error  shift, and go to state 17
    COLON  shift, and go to state 18
    COMMA  shift, and go to state 19


State 15

   11 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 10 (declarations)

    declaration   go to state 12
    declarations  go to state 20
    identifiers   go to state 14


State 16

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 17

    9 declaration: identifiers error . INTEGER

    INTEGER  shift, and go to state 22


State 18

    6 declaration: identifiers COLON . INTEGER
    7            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 19

   13 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 25


State 20

   11 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 11 (declarations)


State 21

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 10 (declarations)

    declaration   go to state 12
    declarations  go to state 26
    identifiers   go to state 14


State 22

    9 declaration: identifiers error INTEGER .

    $default  reduce using rule 9 (declaration)


State 23

    6 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 24

    7 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   13 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 13 (identifiers)


State 26

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 27

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 44


State 31

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 45
    OF                shift, and go to state 46


State 32

   31 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 56
    mult_expression   go to state 57
    relation_exp      go to state 58
    relation_and_exp  go to state 59
    bool_exp          go to state 60


State 33

   29 statement: IF . bool_exp THEN statements ENDIF
   30          | IF . bool_exp THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 56
    mult_expression   go to state 57
    relation_exp      go to state 58
    relation_and_exp  go to state 59
    bool_exp          go to state 61


State 34

   32 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 62


State 35

   36 statement: CONTINUE .

    $default  reduce using rule 36 (statement)


State 36

   34 statement: READ . vars

    IDENT  shift, and go to state 40

    ident  go to state 41
    var    go to state 63
    vars   go to state 64


State 37

   35 statement: WRITE . vars

    IDENT  shift, and go to state 40

    ident  go to state 41
    var    go to state 63
    vars   go to state 65


State 38

   33 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 40

    ident  go to state 41
    var    go to state 66


State 39

   37 statement: RETURN . expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 68
    mult_expression  go to state 57


State 40

    5 ident: IDENT .
   24 var: IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   25    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 5 (ident)


State 41

   23 var: ident .

    $default  reduce using rule 23 (var)


State 42

   28 statement: var . ASSIGN expression
   38          | var . error expression

    error   shift, and go to state 70
    ASSIGN  shift, and go to state 71


State 43

   40 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 72


State 44

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 73


State 45

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 74


State 46

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 75


State 47

   16 term: L_PAREN . expression R_PAREN
   17     | L_PAREN . mult_expression R_PAREN
   53 relation_exp: L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 76
    mult_expression   go to state 77
    relation_exp      go to state 58
    relation_and_exp  go to state 59
    bool_exp          go to state 78


State 48

   54 relation_exp: NOT . expression comparison expression
   55             | NOT . TRUE
   56             | NOT . FALSE
   57             | NOT . L_PAREN bool_exp R_PAREN

    L_PAREN  shift, and go to state 79
    TRUE     shift, and go to state 80
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 81
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 82
    mult_expression  go to state 57


State 49

   51 relation_exp: TRUE .

    $default  reduce using rule 51 (relation_exp)


State 50

   18 term: SUB . NUMBER
   19     | SUB . var
   20     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 84

    ident  go to state 41
    var    go to state 85


State 51

   52 relation_exp: FALSE .

    $default  reduce using rule 52 (relation_exp)


State 52

    5 ident: IDENT .
   21 term: IDENT . L_PAREN expression R_PAREN
   22     | IDENT . L_PAREN mult_expression R_PAREN
   24 var: IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   25    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 86
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 5 (ident)


State 53

   14 term: NUMBER .

    $default  reduce using rule 14 (term)


State 54

   44 mult_expression: term .
   45                | term . MOD term
   46                | term . MULT term
   47                | term . DIV term
   48                | term . ADD term
   49                | term . SUB term

    MOD   shift, and go to state 87
    DIV   shift, and go to state 88
    ADD   shift, and go to state 89
    SUB   shift, and go to state 90
    MULT  shift, and go to state 91

    ADD       [reduce using rule 44 (mult_expression)]
    SUB       [reduce using rule 44 (mult_expression)]
    $default  reduce using rule 44 (mult_expression)


State 55

   15 term: var .

    $default  reduce using rule 15 (term)


State 56

   50 relation_exp: expression . comparison expression

    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97

    comparison  go to state 98


State 57

   41 expression: mult_expression .
   42           | mult_expression . SUB mult_expression
   43           | mult_expression . ADD mult_expression

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 41 (expression)


State 58

   58 relation_and_exp: relation_exp .
   59                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 101

    $default  reduce using rule 58 (relation_and_exp)


State 59

   60 bool_exp: relation_and_exp .
   61         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 102

    $default  reduce using rule 60 (bool_exp)


State 60

   31 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 103


State 61

   29 statement: IF bool_exp . THEN statements ENDIF
   30          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 104


State 62

   32 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 105


State 63

   26 vars: var . COMMA vars
   27     | var .

    COMMA  shift, and go to state 106

    $default  reduce using rule 27 (vars)


State 64

   34 statement: READ vars .

    $default  reduce using rule 34 (statement)


State 65

   35 statement: WRITE vars .

    $default  reduce using rule 35 (statement)


State 66

   33 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 107


State 67

   16 term: L_PAREN . expression R_PAREN
   17     | L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 108
    mult_expression  go to state 77


State 68

   37 statement: RETURN expression .

    $default  reduce using rule 37 (statement)


State 69

   24 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   25    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 109
    mult_expression  go to state 57


State 70

   38 statement: var error . expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 110
    mult_expression  go to state 57


State 71

   28 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 111
    mult_expression  go to state 57


State 72

   40 statements: statement SEMICOLON . statements

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 112


State 73

    2 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 2 (function)


State 74

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 113


State 75

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 76

   16 term: L_PAREN expression . R_PAREN
   50 relation_exp: expression . comparison expression

    R_PAREN  shift, and go to state 114
    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93
    LT       shift, and go to state 94
    GT       shift, and go to state 95
    LTE      shift, and go to state 96
    GTE      shift, and go to state 97

    comparison  go to state 98


State 77

   17 term: L_PAREN mult_expression . R_PAREN
   41 expression: mult_expression .
   42           | mult_expression . SUB mult_expression
   43           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 115
    ADD      shift, and go to state 99
    SUB      shift, and go to state 100

    R_PAREN   [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


State 78

   53 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 116


State 79

   16 term: L_PAREN . expression R_PAREN
   17     | L_PAREN . mult_expression R_PAREN
   57 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 76
    mult_expression   go to state 77
    relation_exp      go to state 58
    relation_and_exp  go to state 59
    bool_exp          go to state 117


State 80

   55 relation_exp: NOT TRUE .

    $default  reduce using rule 55 (relation_exp)


State 81

   56 relation_exp: NOT FALSE .

    $default  reduce using rule 56 (relation_exp)


State 82

   54 relation_exp: NOT expression . comparison expression

    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97

    comparison  go to state 118


State 83

   20 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 119
    mult_expression  go to state 57


State 84

   18 term: SUB NUMBER .

    $default  reduce using rule 18 (term)


State 85

   19 term: SUB var .

    $default  reduce using rule 19 (term)


State 86

   21 term: IDENT L_PAREN . expression R_PAREN
   22     | IDENT L_PAREN . mult_expression R_PAREN

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 120
    mult_expression  go to state 121


State 87

   45 mult_expression: term MOD . term

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 122
    var    go to state 55


State 88

   47 mult_expression: term DIV . term

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 123
    var    go to state 55


State 89

   48 mult_expression: term ADD . term

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 124
    var    go to state 55


State 90

   49 mult_expression: term SUB . term

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 125
    var    go to state 55


State 91

   46 mult_expression: term MULT . term

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 126
    var    go to state 55


State 92

   64 comparison: EQ .

    $default  reduce using rule 64 (comparison)


State 93

   65 comparison: NEQ .

    $default  reduce using rule 65 (comparison)


State 94

   62 comparison: LT .

    $default  reduce using rule 62 (comparison)


State 95

   63 comparison: GT .

    $default  reduce using rule 63 (comparison)


State 96

   66 comparison: LTE .

    $default  reduce using rule 66 (comparison)


State 97

   67 comparison: GTE .

    $default  reduce using rule 67 (comparison)


State 98

   50 relation_exp: expression comparison . expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 127
    mult_expression  go to state 57


State 99

   43 expression: mult_expression ADD . mult_expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    mult_expression  go to state 128


State 100

   42 expression: mult_expression SUB . mult_expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    mult_expression  go to state 129


State 101

   59 relation_and_exp: relation_exp AND . relation_and_exp

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 56
    mult_expression   go to state 57
    relation_exp      go to state 58
    relation_and_exp  go to state 130


State 102

   61 bool_exp: relation_and_exp OR . relation_and_exp

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 56
    mult_expression   go to state 57
    relation_exp      go to state 58
    relation_and_exp  go to state 131


State 103

   31 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 132


State 104

   29 statement: IF bool_exp THEN . statements ENDIF
   30          | IF bool_exp THEN . statements ELSE statements ENDIF

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 133


State 105

   32 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 134


State 106

   26 vars: var COMMA . vars

    IDENT  shift, and go to state 40

    ident  go to state 41
    var    go to state 63
    vars   go to state 135


State 107

   33 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    NUMBER  shift, and go to state 136


State 108

   16 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114


State 109

   24 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   25    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 137


State 110

   38 statement: var error expression .

    $default  reduce using rule 38 (statement)


State 111

   28 statement: var ASSIGN expression .

    $default  reduce using rule 28 (statement)


State 112

   40 statements: statement SEMICOLON statements .

    $default  reduce using rule 40 (statements)


State 113

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 138


State 114

   16 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 16 (term)


State 115

   17 term: L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 17 (term)


State 116

   53 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 53 (relation_exp)


State 117

   57 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 139


State 118

   54 relation_exp: NOT expression comparison . expression

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 140
    mult_expression  go to state 57


State 119

   20 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 141


State 120

   21 term: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 142


State 121

   22 term: IDENT L_PAREN mult_expression . R_PAREN
   41 expression: mult_expression .
   42           | mult_expression . SUB mult_expression
   43           | mult_expression . ADD mult_expression

    R_PAREN  shift, and go to state 143
    ADD      shift, and go to state 99
    SUB      shift, and go to state 100

    R_PAREN  [reduce using rule 41 (expression)]


State 122

   45 mult_expression: term MOD term .

    $default  reduce using rule 45 (mult_expression)


State 123

   47 mult_expression: term DIV term .

    $default  reduce using rule 47 (mult_expression)


State 124

   48 mult_expression: term ADD term .

    $default  reduce using rule 48 (mult_expression)


State 125

   49 mult_expression: term SUB term .

    $default  reduce using rule 49 (mult_expression)


State 126

   46 mult_expression: term MULT term .

    $default  reduce using rule 46 (mult_expression)


State 127

   50 relation_exp: expression comparison expression .

    $default  reduce using rule 50 (relation_exp)


State 128

   43 expression: mult_expression ADD mult_expression .

    $default  reduce using rule 43 (expression)


State 129

   42 expression: mult_expression SUB mult_expression .

    $default  reduce using rule 42 (expression)


State 130

   59 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 59 (relation_and_exp)


State 131

   61 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 61 (bool_exp)


State 132

   31 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 144


State 133

   29 statement: IF bool_exp THEN statements . ENDIF
   30          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 145
    ELSE   shift, and go to state 146


State 134

   32 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 147


State 135

   26 vars: var COMMA vars .

    $default  reduce using rule 26 (vars)


State 136

   33 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 148


State 137

   24 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   25    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 149

    $default  reduce using rule 24 (var)


State 138

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 150


State 139

   57 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 57 (relation_exp)


State 140

   54 relation_exp: NOT expression comparison expression .

    $default  reduce using rule 54 (relation_exp)


State 141

   20 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 20 (term)


State 142

   21 term: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 21 (term)


State 143

   22 term: IDENT L_PAREN mult_expression R_PAREN .

    $default  reduce using rule 22 (term)


State 144

   31 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 31 (statement)


State 145

   29 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 29 (statement)


State 146

   30 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 151


State 147

   32 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 56
    mult_expression   go to state 57
    relation_exp      go to state 58
    relation_and_exp  go to state 59
    bool_exp          go to state 152


State 148

   33 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    SUB      shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident             go to state 41
    term              go to state 54
    var               go to state 55
    expression        go to state 56
    mult_expression   go to state 57
    relation_exp      go to state 58
    relation_and_exp  go to state 59
    bool_exp          go to state 153


State 149

   25 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 154
    mult_expression  go to state 57


State 150

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 151

   30 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 155


State 152

   32 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 32 (statement)


State 153

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 156


State 154

   25 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 157


State 155

   30 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 30 (statement)


State 156

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    IDENT  shift, and go to state 40

    ident  go to state 41
    var    go to state 158


State 157

   25 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 25 (var)


State 158

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP

    ASSIGN  shift, and go to state 159


State 159

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statements SEMICOLON ENDLOOP

    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident            go to state 41
    term             go to state 54
    var              go to state 55
    expression       go to state 160
    mult_expression  go to state 57


State 160

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statements SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 161


State 161

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statements SEMICOLON ENDLOOP

    WHILE     shift, and go to state 32
    IF        shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    FOR       shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 39 (statements)

    ident       go to state 41
    var         go to state 42
    statement   go to state 43
    statements  go to state 162


State 162

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 163


State 163

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON . ENDLOOP

    ENDLOOP  shift, and go to state 164


State 164

   33 statement: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements SEMICOLON ENDLOOP .

    $default  reduce using rule 33 (statement)
